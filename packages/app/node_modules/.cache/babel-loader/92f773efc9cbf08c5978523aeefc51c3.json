{"ast":null,"code":"import _slicedToArray from \"/Users/swyx/Work/netlify-identity-fauna-reddit-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react'; // -------------- usage --------------\n\nimport netlifyIdentity from 'netlify-identity-widget';\nimport { useLocalStorage } from '.'; // import faunadb from 'faunadb';\n\nnetlifyIdentity.init();\nexport default function useNetlifyIdentity(onAuthChange) {\n  if (!onAuthChange) throw new Error('onAuthChange cannot be falsy');\n\n  var itemChangeCallback = function itemChangeCallback(_user) {\n    console.log('itemChangeCallback', _user);\n\n    if (_user) {\n      var faunadb_token = _user && _user.app_metadata && _user.app_metadata.faunadb_token;\n      if (faunadb_token) onAuthChange(faunadb_token);else {\n        console.error('Expected _user to have a faunadb_token, check logs for the identity-signup.js function.');\n        console.log(_user);\n      }\n    } else {\n      onAuthChange(null);\n    }\n  };\n\n  var _useLocalStorage = useLocalStorage('faunaNetlifyUser', itemChangeCallback),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 3),\n      item = _useLocalStorage2[0],\n      setItem = _useLocalStorage2[1],\n      removeItem = _useLocalStorage2[2];\n\n  React.useEffect(function () {\n    netlifyIdentity.on('login', function (user) {\n      return setItem(user);\n    });\n    netlifyIdentity.on('logout', function () {\n      return removeItem();\n    });\n  }, []); // definition - `item` comes from  useNetlifyIdentity hook\n\n  var genericAuthedFetch = function genericAuthedFetch(method) {\n    return function (endpoint) {\n      var obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!item || !item.token || !item.token.access_token) throw new Error('no user token found');\n      var defaultObj = {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + item.token.access_token\n        }\n      };\n      var finalObj = Object.assign(defaultObj, {\n        method: method\n      }, obj);\n      return fetch(endpoint, finalObj).then(function (res) {\n        return finalObj.headers['Content-Type'] === 'application/json' ? res.json() : res;\n      });\n    };\n  };\n\n  var authedFetch = {\n    get: genericAuthedFetch('GET'),\n    post: genericAuthedFetch('POST'),\n    put: genericAuthedFetch('PUT'),\n    delete: genericAuthedFetch('DELETE')\n  };\n  return {\n    user: item,\n    doLogout: netlifyIdentity.logout,\n    doLogin: function doLogin() {\n      return netlifyIdentity.open();\n    },\n    authedFetch: authedFetch\n  };\n}\n/*\n   <div className=\"Login\">\n{user ? (\n  <a onClick={doLogout}>Logout</a>\n) : (\n  <span>\n    <a onClick={doLogin}>Login or Sign Up</a>\n  </span>\n)}\n</div> \n*/\n//   app_metadata,\n//   created_at,\n//   confirmed_at,\n//   email,\n//   id,\n//   user_metadata","map":null,"metadata":{},"sourceType":"module"}