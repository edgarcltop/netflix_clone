{"ast":null,"code":"import _slicedToArray from \"/Users/swyx/Work/netlify-identity-fauna-reddit-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/swyx/Work/netlify-identity-fauna-reddit-clone/packages/app/src/components/LoggedIn.js\";\nimport React, { useState, useRef } from 'react';\nimport { FaunaCtx, UserCtx } from 'contexts';\nexport var LoggedIn = function LoggedIn() {\n  var identity = React.useContext(UserCtx);\n  var user = identity.user,\n      doLogout = identity.doLogout,\n      doLogin = identity.doLogin,\n      authedFetch = identity.authedFetch;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      newTodo = _useState2[0],\n      setNewTodo = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    return setNewTodo(e.target.value);\n  };\n\n  var _useRef = useRef(FaunaCtx),\n      addList = _useRef.addList;\n\n  var handleNewTodoKeyDown = function handleNewTodoKeyDown(event) {\n    if (event.keyCode !== 13) return;\n    event.preventDefault();\n    var val = newTodo.trim();\n\n    if (val) {\n      addList(val);\n      setNewTodo('');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"you are logged in\", React.createElement(\"a\", {\n    onClick: doLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Logout\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"new list\"), React.createElement(\"input\", {\n    className: \"new-todo\",\n    placeholder: \"Create a new list or choose from below.\",\n    value: newTodo,\n    onKeyDown: handleNewTodoKeyDown,\n    onChange: handleChange,\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/swyx/Work/netlify-identity-fauna-reddit-clone/packages/app/src/components/LoggedIn.js"],"names":["React","useState","useRef","FaunaCtx","UserCtx","LoggedIn","identity","useContext","user","doLogout","doLogin","authedFetch","newTodo","setNewTodo","handleChange","e","target","value","addList","handleNewTodoKeyDown","event","keyCode","preventDefault","val","trim"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,UAAlC;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,MAAMC,QAAQ,GAAGN,KAAK,CAACO,UAAN,CAAiBH,OAAjB,CAAjB;AAD4B,MAEpBI,IAFoB,GAEqBF,QAFrB,CAEpBE,IAFoB;AAAA,MAEdC,QAFc,GAEqBH,QAFrB,CAEdG,QAFc;AAAA,MAEJC,OAFI,GAEqBJ,QAFrB,CAEJI,OAFI;AAAA,MAEKC,WAFL,GAEqBL,QAFrB,CAEKK,WAFL;;AAAA,kBAIEV,QAAQ,CAAC,EAAD,CAJV;AAAA;AAAA,MAIrBW,OAJqB;AAAA,MAIZC,UAJY;;AAK5B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC;AAAA,WAAIF,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,GAAtB;;AAL4B,gBAMRf,MAAM,CAACC,QAAD,CANE;AAAA,MAMpBe,OANoB,WAMpBA,OANoB;;AAO5B,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK,EAAI;AACpC,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AAC1BD,IAAAA,KAAK,CAACE,cAAN;AACA,QAAIC,GAAG,GAAGX,OAAO,CAACY,IAAR,EAAV;;AACA,QAAID,GAAJ,EAAS;AACPL,MAAAA,OAAO,CAACK,GAAD,CAAP;AACAV,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD;AACF,GARD;;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAG,IAAA,OAAO,EAAEJ,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,WAAW,EAAC,yCAFd;AAGE,IAAA,KAAK,EAAEG,OAHT;AAIE,IAAA,SAAS,EAAEO,oBAJb;AAKE,IAAA,QAAQ,EAAEL,YALZ;AAME,IAAA,SAAS,EAAE,IANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,CADF;AAiBD,CAjCM","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { FaunaCtx, UserCtx } from 'contexts';\n\nexport const LoggedIn = () => {\n  const identity = React.useContext(UserCtx);\n  const { user, doLogout, doLogin, authedFetch } = identity;\n\n  const [newTodo, setNewTodo] = useState('');\n  const handleChange = e => setNewTodo(e.target.value);\n  const { addList } = useRef(FaunaCtx);\n  const handleNewTodoKeyDown = event => {\n    if (event.keyCode !== 13) return;\n    event.preventDefault();\n    var val = newTodo.trim();\n    if (val) {\n      addList(val);\n      setNewTodo('');\n    }\n  };\n  return (\n    <div>\n      you are logged in\n      <a onClick={doLogout}>Logout</a>\n      <div>\n        <h3>new list</h3>\n        <input\n          className=\"new-todo\"\n          placeholder=\"Create a new list or choose from below.\"\n          value={newTodo}\n          onKeyDown={handleNewTodoKeyDown}\n          onChange={handleChange}\n          autoFocus={true}\n        />\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}