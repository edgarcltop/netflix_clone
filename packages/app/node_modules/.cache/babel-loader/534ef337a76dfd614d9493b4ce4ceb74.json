{"ast":null,"code":"'use strict';\n/**\n * Used for functions that take an options objects.\n * Fills in defaults for options not provided.\n * Throws errors for provided options that aren't recognized.\n * A default value of `undefined` is used to indicate that the option must be provided.\n * @private\n */\n\nfunction applyDefaults(provided, defaults) {\n  var out = {};\n\n  for (var providedKey in provided) {\n    if (!(providedKey in defaults)) {\n      throw new Error('No such option ' + providedKey);\n    }\n\n    out[providedKey] = provided[providedKey];\n  }\n\n  for (var defaultsKey in defaults) {\n    if (!(defaultsKey in out)) {\n      out[defaultsKey] = defaults[defaultsKey];\n    }\n  }\n\n  return out;\n}\n/**\n * Returns a new object without any keys where the value would be undefined.\n * @private\n * */\n\n\nfunction removeUndefinedValues(object) {\n  var res = {};\n\n  for (var key in object) {\n    var val = object[key];\n\n    if (val !== undefined) {\n      res[key] = val;\n    }\n  }\n\n  return res;\n}\n\nmodule.exports = {\n  applyDefaults: applyDefaults,\n  removeUndefinedValues: removeUndefinedValues\n};","map":null,"metadata":{},"sourceType":"script"}